@use 'src/utility/style/mixin.scss' as *;

.parent {
    --lineBackgroundColor: black;
    --lineSize: 10;
    --circleSize: 150px;
    --amplify: 1;
}

.parent {
    width: var(--circleSize);
    aspect-ratio: 1 / 1;

    > svg {
        position: relative;
        width: 100%;
        aspect-ratio: 1 / 1;
        /* background-color: aqua; */
        display: flex;
        justify-content: center;
        align-items: center;
        animation: TKSLoadingLineCircle1 10s linear infinite;

        > circle {
            width: 100%;
            height: 100%;
            fill: none;
            stroke-width: var(--lineSize);
            stroke: var(--lineBackgroundColor);
            stroke-linecap: round;
            /* transform: translate(5px, 5px); */
            /* stroke-dasharray: calc(440 * var(--amplify)); /* 440 is basic value for circleSize is 150px */
            /* stroke-dashoffset: calc(440 * var(--amplify)); /* 440 is basic value for circleSize is 150px */
            animation: TKSLoadingLineCircle2 4s linear infinite;
            stroke-dasharray: calc(440px * var(--amplify));
            stroke-dashoffset: calc(440px * var(--amplify));
        }
    }
}

:local {
    @keyframes TKSLoadingLineCircle1 {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
    @keyframes TKSLoadingLineCircle2 {
        0%,
        100% {
            stroke-dashoffset: calc(440px * var(--amplify)); /* 440 is basic value for circleSize is 150px */
        }
        50% {
            stroke-dashoffset: 10px;
        }
        50.1% {
            stroke-dashoffset: calc(880px * var(--amplify)); /* 880 is basic value for circleSize is 150px */
        }
    }
}
